{"version":3,"sources":["../src/Instafetch.js"],"names":["axios","require","process","env","client_id","client_secret","refresh_token","Instafetch","generateAccessToken","bind","generateGSheetsAppendCallUrl","appendCall","instructions","methodNotAllowed","post","reqSpreadsheet","reqRange","spreadsheet","range","res","body","query","LineHash","AuthorProfile","SpreadsheetId","SpreadsheetRange","get","then","data","graphql","user","is_verified","isVerified","send","message","spreadsheetRange","majorDimension","values","Date","now","headers","Authorization","access_token","catch","console","log","err","req","module","exports"],"mappings":";;;;;;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;mBACoDC,QAAQC,G;IAApDC,S,gBAAAA,S;IAAWC,a,gBAAAA,a;IAAeC,a,gBAAAA,a;;IAE5BC,U;AACJ,wBAAc;AAAA;;AACZ,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,4BAAL,GAAoC,KAAKA,4BAAL,CAAkCD,IAAlC,CAClC,IADkC,CAApC;AAGA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKI,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBJ,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;;;0CAEqB;AACpB,aAAOT,MAAMc,IAAN,oDAC4CV,SAD5C,uBACuEC,aADvE,uBACsGC,aADtG,+BAAP;AAGD;;;iDAE4BS,c,EAAgBC,Q,EAAU;AACrD,UAAIC,cAAc,8CAAlB;AACA,UAAIC,QAAQ,IAAZ;AACA,UAAIH,cAAJ,EAAoBE,cAAcF,cAAd;AACpB,UAAIC,QAAJ,EAAcE,QAAQF,QAAR;AACd,gEAAwDC,WAAxD,gBAA8EC,KAA9E;AACD;;;qCAE2BC,G,EAAK;AAAA;;AAAA,UAApBC,IAAoB,QAApBA,IAAoB;AAAA,UAAdC,KAAc,QAAdA,KAAc;AAAA,UACvBC,QADuB,GACKD,KADL,CACvBC,QADuB;AAAA,UACbC,aADa,GACKF,KADL,CACbE,aADa;AAAA,UAERR,cAFQ,GAEuCK,IAFvC,CAEvBI,aAFuB;AAAA,UAE0BR,QAF1B,GAEuCI,IAFvC,CAEQK,gBAFR;;AAG/B,aAAOzB,MACJ0B,GADI,gCAC6BH,aAD7B,cAEJI,IAFI,CAEC,iBAAc;AAAA,YAAXC,IAAW,SAAXA,IAAW;;AAClB,eAAOA,KAAKC,OAAL,CAAaC,IAAb,CAAkBC,WAAzB;AACD,OAJI,EAKJJ,IALI,CAKC,sBAAc;AAClB,YAAI,CAACK,UAAL,EACEb,IAAIc,IAAJ,CAAS,EAAEC,SAAS,mCAAX,EAAT;AACF,eAAO,MAAK1B,mBAAL,EAAP;AACD,OATI,EAUJmB,IAVI,CAUC,iBAAc;AAAA,YAAXC,IAAW,SAAXA,IAAW;;AAClB5B,cAAMc,IAAN,CACE,MAAKJ,4BAAL,CAAkCK,cAAlC,EAAkDC,QAAlD,CADF,EAEE;AACEE,iBAAO,MAAKiB,gBADd;AAEEC,0BAAgB,MAFlB;AAGEC,kBAAQ,CAAC,CAACf,QAAD,EAAWC,aAAX,EAA0B,MAA1B,EAAkCe,KAAKC,GAAL,EAAlC,CAAD;AAHV,SAFF,EAOE;AACEC,mBAAS;AACPC,uCAAyBb,KAAKc,YADvB;AAEP,4BAAgB;AAFT;AADX,SAPF;AAcAvB,YAAIc,IAAJ,CAAS,EAAEC,SAAS,wBAAX,EAAT;AACD,OA1BI,EA2BJS,KA3BI,CA2BE;AAAA,eAAOC,QAAQC,GAAR,CAAYC,GAAZ,CAAP;AAAA,OA3BF,CAAP;AA4BD;;;iCAEYC,G,EAAK5B,G,EAAK;AACrBA,UAAIc,IAAJ,CAAS,EAAEC,SAAS,0CAAX,EAAT;AACD;;;qCAEgBa,G,EAAK5B,G,EAAK;AACzBA,UAAIc,IAAJ,CAAS,EAAEC,SAAS,oBAAX,EAAT;AACD;;;;;;AAGHc,OAAOC,OAAP,GAAiB,EAAE1C,sBAAF,EAAjB","file":"Instafetch.js","sourcesContent":["const axios = require(\"axios\");\nconst { client_id, client_secret, refresh_token } = process.env;\n\nclass Instafetch {\n  constructor() {\n    this.generateAccessToken = this.generateAccessToken.bind(this);\n    this.generateGSheetsAppendCallUrl = this.generateGSheetsAppendCallUrl.bind(\n      this\n    );\n    this.appendCall = this.appendCall.bind(this);\n    this.instructions = this.instructions.bind(this);\n    this.methodNotAllowed = this.methodNotAllowed.bind(this);\n  }\n\n  generateAccessToken() {\n    return axios.post(\n      `https://oauth2.googleapis.com/token?client_id=${client_id}&client_secret=${client_secret}&refresh_token=${refresh_token}&grant_type=refresh_token`\n    );\n  }\n\n  generateGSheetsAppendCallUrl(reqSpreadsheet, reqRange) {\n    let spreadsheet = \"1B05lCFpWSxkNA7kdQavjZa0VARlbx21D2TMkrGcp0Os\";\n    let range = \"A1\";\n    if (reqSpreadsheet) spreadsheet = reqSpreadsheet;\n    if (reqRange) range = reqRange;\n    return `https://sheets.googleapis.com/v4/spreadsheets/${spreadsheet}/values/${range}:append?includeValuesInResponse=false&insertDataOption=INSERT_ROWS&responseDateTimeRenderOption=SERIAL_NUMBER&responseValueRenderOption=FORMATTED_VALUE&valueInputOption=RAW`;\n  }\n\n  appendCall({ body, query }, res) {\n    const { LineHash, AuthorProfile } = query;\n    const { SpreadsheetId: reqSpreadsheet, SpreadsheetRange: reqRange } = body;\n    return axios\n      .get(`https://www.instagram.com/${AuthorProfile}/?__a=1`)\n      .then(({ data }) => {\n        return data.graphql.user.is_verified;\n      })\n      .then(isVerified => {\n        if (!isVerified)\n          res.send({ message: \"Instagram profile is not verified\" });\n        return this.generateAccessToken();\n      })\n      .then(({ data }) => {\n        axios.post(\n          this.generateGSheetsAppendCallUrl(reqSpreadsheet, reqRange),\n          {\n            range: this.spreadsheetRange,\n            majorDimension: \"ROWS\",\n            values: [[LineHash, AuthorProfile, \"true\", Date.now()]]\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${data.access_token}`,\n              \"Content-Type\": \"application/json\"\n            }\n          }\n        );\n        res.send({ message: \"row added successfully\" });\n      })\n      .catch(err => console.log(err));\n  }\n\n  instructions(req, res) {\n    res.send({ message: \"please post a LineHash and AuthorProfile\" });\n  }\n\n  methodNotAllowed(req, res) {\n    res.send({ message: \"method not allowed\" });\n  }\n}\n\nmodule.exports = { Instafetch };\n"]}